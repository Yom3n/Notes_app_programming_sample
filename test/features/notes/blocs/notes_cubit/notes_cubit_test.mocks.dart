// Mocks generated by Mockito 5.4.2 from annotations
// in notes_app/test/features/notes/blocs/notes_cubit/notes_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notes_rest_service/src/note_model.dart' as _i2;
import 'package:notes_rest_service/src/rest_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNoteModel_0 extends _i1.SmartFake implements _i2.NoteModel {
  _FakeNoteModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [INotesRestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockINotesRestService extends _i1.Mock implements _i3.INotesRestService {
  MockINotesRestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.NoteModel>> getNotes() => (super.noSuchMethod(
        Invocation.method(
          #getNotes,
          [],
        ),
        returnValue: _i4.Future<List<_i2.NoteModel>>.value(<_i2.NoteModel>[]),
      ) as _i4.Future<List<_i2.NoteModel>>);

  @override
  _i4.Future<_i2.NoteModel> createNote(_i2.NoteModel? note) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNote,
          [note],
        ),
        returnValue: _i4.Future<_i2.NoteModel>.value(_FakeNoteModel_0(
          this,
          Invocation.method(
            #createNote,
            [note],
          ),
        )),
      ) as _i4.Future<_i2.NoteModel>);

  @override
  _i4.Future<_i2.NoteModel> updateNote(
    int? noteId,
    _i2.NoteModel? updatedData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNote,
          [
            noteId,
            updatedData,
          ],
        ),
        returnValue: _i4.Future<_i2.NoteModel>.value(_FakeNoteModel_0(
          this,
          Invocation.method(
            #updateNote,
            [
              noteId,
              updatedData,
            ],
          ),
        )),
      ) as _i4.Future<_i2.NoteModel>);

  @override
  _i4.Future<void> deleteNote(int? noteId) => (super.noSuchMethod(
        Invocation.method(
          #deleteNote,
          [noteId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
