// Mocks generated by Mockito 5.4.2 from annotations
// in notes_app/test/features/notes/blocs/note_cubit/note_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notes_app/features/notes/use_cases/create_note.dart' as _i4;
import 'package:notes_app/models/note.dart' as _i3;
import 'package:notes_rest_service/notes_rest_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeINotesRestService_0 extends _i1.SmartFake
    implements _i2.INotesRestService {
  _FakeINotesRestService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_1 extends _i1.SmartFake implements _i3.Note {
  _FakeNote_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CreateNote].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNote extends _i1.Mock implements _i4.CreateNote {
  MockCreateNote() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.INotesRestService get notesRestService => (super.noSuchMethod(
        Invocation.getter(#notesRestService),
        returnValue: _FakeINotesRestService_0(
          this,
          Invocation.getter(#notesRestService),
        ),
      ) as _i2.INotesRestService);

  @override
  _i5.Future<_i3.Note> call(_i3.Note? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Note>.value(_FakeNote_1(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Note>);
}
